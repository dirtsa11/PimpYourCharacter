@model PimpYourCharacter.ViewModel.PersonnageViewModel
@{
    ViewBag.Title = "Edit";
}

<h2>Modifier</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Personnage</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.personnage.id_personnage)

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.nom,"Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.personnage.nom, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.personnage.nom, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.age,"Age", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.personnage.age, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.personnage.age, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.id_ethnie, "Ethnie", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.personnage.id_ethnie,
                        (SelectList)ViewBag.id_ethnie,
                        Model.personnage.ethnie.id_ethnie)

                @Html.ValidationMessageFor(model => model.personnage.id_ethnie, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.id_genre, "Genre", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.personnage.id_genre,
                        (SelectList)ViewBag.id_genre,
                        Model.personnage.genre.id_genre)

                @Html.ValidationMessageFor(model => model.personnage.id_genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.id_vbas, "Vêtement bas", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.personnage.id_vbas,
                        (SelectList)ViewBag.id_vbas,
                        Model.personnage.vbas.id_vbas)

                @Html.ValidationMessageFor(model => model.personnage.id_vbas, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.id_vhaut, "Vêtement haut", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.personnage.id_vhaut,
                        (SelectList)ViewBag.id_vhaut,
                        Model.personnage.vhaut.id_vhaut)

                @Html.ValidationMessageFor(model => model.personnage.id_vhaut, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.personnage.id_corps, "Id corps", new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(m => m.personnage.id_corps,
                        (SelectList)ViewBag.id_corps,
                        Model.personnage.corps.id_corps)

                @Html.ValidationMessageFor(model => model.personnage.id_corps, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allAccessoires, "Accessoire", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedAccessoires, Model.allAccessoires)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allArmes, "Arme", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedArmes, Model.allArmes)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allBoucliers, "Bouclier", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedBoucliers, Model.allBoucliers)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allVMains, "Vêtement main", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedVMains, Model.allVMains)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allVPieds, "Vêtement pied", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedVPieds, Model.allVPieds)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.allVTetes, "Vêtement tête", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(m => m.SelectedVTetes, Model.allVTetes)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauvegarder" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
