@model PimpYourCharacter.Models.tete

@{
    ViewBag.Title = "Edit";
}

<h2>Modifier</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Tête</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_tete)

        <div class="form-group">
            @Html.LabelFor(model => model.id_nez, "Id nez", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_nez", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_nez, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_bouche, "Id bouche", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_bouche", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_bouche, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.id_yeux, "Id yeux", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("id_yeux", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.id_yeux, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.hauteur, "Hauteur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.hauteur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hauteur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.largeur, "Largeur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.largeur, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.largeur, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.forme, "Forme", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.forme, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.forme, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauvegarder" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
